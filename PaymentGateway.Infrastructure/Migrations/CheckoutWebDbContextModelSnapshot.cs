// <auto-generated />
using System;
using Checkout.PaymentGateway.Infrastructure.DatabaseFactory;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Checkout.PaymentGateway.Infrastructure.Migrations
{
    [DbContext(typeof(CheckoutWebDbContext))]
    partial class CheckoutWebDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Checkout.PaymentGateway.Domain.Entities.Merchant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ApiKey");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MerchantID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MerchantID");

                    b.HasKey("Id");

                    b.ToTable("Merchants", "dbo");
                });

            modelBuilder.Entity("Checkout.PaymentGateway.Domain.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ApiKey");

                    b.Property<string>("BankTransactionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFutureTransaction")
                        .HasColumnType("bit")
                        .HasColumnName("IsFutureTransaction");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MerchantID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MerchantID");

                    b.Property<string>("OrderID")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("OrderID");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PaymentDate");

                    b.Property<Guid>("PaymentID")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PaymentID");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int")
                        .HasColumnName("PaymentStatus");

                    b.HasKey("Id");

                    b.ToTable("Payments", "dbo");
                });

            modelBuilder.Entity("Checkout.PaymentGateway.Domain.Entities.Payment", b =>
                {
                    b.OwnsOne("Checkout.PaymentGateway.Domain.SharedKernel.CreditCard", "Card", b1 =>
                        {
                            b1.Property<int>("PaymentId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CardName")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CardName");

                            b1.Property<string>("CardNetwork")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CardNumber")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CardNumber");

                            b1.Property<string>("CvvCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ExpiryMonth")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ExpiryMonth");

                            b1.Property<string>("ExpiryYear")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ExpiryYear");

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.WithOwner()
                                .HasForeignKey("PaymentId");
                        });

                    b.OwnsOne("Checkout.PaymentGateway.Domain.SharedKernel.Money", "Amount", b1 =>
                        {
                            b1.Property<int>("PaymentId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasColumnName("Currency");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Amount");

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.WithOwner()
                                .HasForeignKey("PaymentId");
                        });

                    b.Navigation("Amount")
                        .IsRequired();

                    b.Navigation("Card");
                });
#pragma warning restore 612, 618
        }
    }
}
